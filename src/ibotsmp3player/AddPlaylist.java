/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ibotsmp3player;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author saleh
 */
public class AddPlaylist extends javax.swing.JFrame {

    /**
     * Creates new form AddPlaylist
     */
    File myObj;
    String[] songLocations = new String[1001];
    int songCounter = 0;
    
    static DefaultTableModel model;
    
    public AddPlaylist() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        addBtn = new javax.swing.JLabel();
        addTxt = new javax.swing.JLabel();
        dltBtn = new javax.swing.JLabel();
        dltTxt = new javax.swing.JLabel();
        crtBtn = new javax.swing.JLabel();
        crtTxt = new javax.swing.JLabel();
        txt = new javax.swing.JLabel();
        playlistName = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        listedSongs = new javax.swing.JTable();
        backGroundImage = new javax.swing.JLabel();

        setTitle("New Playlist");
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setOpaque(false);

        addBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/add.png"))); // NOI18N
        addBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addBtnMouseExited(evt);
            }
        });

        addTxt.setBackground(new java.awt.Color(153, 153, 153));
        addTxt.setForeground(new java.awt.Color(255, 255, 255));
        addTxt.setText("Add");
        addTxt.setOpaque(true);
        addTxt.setVisible(false);

        dltBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/trash.png"))); // NOI18N
        dltBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dltBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                dltBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                dltBtnMouseExited(evt);
            }
        });

        dltTxt.setBackground(new java.awt.Color(153, 153, 153));
        dltTxt.setForeground(new java.awt.Color(255, 255, 255));
        dltTxt.setText("Delete");
        dltTxt.setOpaque(true);
        dltTxt.setVisible(false);

        crtBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/done.png"))); // NOI18N
        crtBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                crtBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                crtBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                crtBtnMouseExited(evt);
            }
        });

        crtTxt.setBackground(new java.awt.Color(153, 153, 153));
        crtTxt.setForeground(new java.awt.Color(255, 255, 255));
        crtTxt.setText("Create");
        crtTxt.setOpaque(true);
        crtTxt.setVisible(false);

        txt.setForeground(new java.awt.Color(255, 255, 255));
        txt.setText("Playlist Name :");

        playlistName.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        listedSongs.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        listedSongs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Songs"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listedSongs.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane2.setViewportView(listedSongs);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(crtBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(crtTxt))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(addBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addTxt))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(dltBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dltTxt))
                    .addComponent(txt)
                    .addComponent(playlistName, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(playlistName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addBtn)
                            .addComponent(addTxt))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dltBtn)
                            .addComponent(dltTxt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(crtBtn)
                            .addComponent(crtTxt))))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 370));

        backGroundImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/PlaylistBG.png"))); // NOI18N
        getContentPane().add(backGroundImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 370));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseExited
        // TODO add your handling code here:
        addTxt.setVisible(false);
    }//GEN-LAST:event_addBtnMouseExited

    private void addBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseEntered
        // TODO add your handling code here:
        addTxt.setVisible(true);
    }//GEN-LAST:event_addBtnMouseEntered

    private void dltBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dltBtnMouseEntered
        // TODO add your handling code here:
        dltTxt.setVisible(true);
    }//GEN-LAST:event_dltBtnMouseEntered

    private void dltBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dltBtnMouseExited
        // TODO add your handling code here:
        dltTxt.setVisible(false);
    }//GEN-LAST:event_dltBtnMouseExited

    private void crtBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_crtBtnMouseEntered
        // TODO add your handling code here:
        crtTxt.setVisible(true);
    }//GEN-LAST:event_crtBtnMouseEntered

    private void crtBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_crtBtnMouseExited
        // TODO add your handling code here:
        crtTxt.setVisible(false);
    }//GEN-LAST:event_crtBtnMouseExited

    private void addBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseClicked
        // TODO add your handling code here:
        model = (DefaultTableModel)listedSongs.getModel();
        
        FileFilter filter = new FileNameExtensionFilter("MP3 Files", "mp3", "mpeg3");

        JFileChooser fileChooser = new JFileChooser("F:\\IBotsMp3Player\\src\\Music");
        fileChooser.addChoosableFileFilter(filter);

        int returnVal = fileChooser.showOpenDialog(null);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            songLocations[songCounter] = selectedFile + "";
            songCounter++;
            String songName = fileChooser.getSelectedFile().getName();
            model.addRow(new Object[]{songName});
        }
    }//GEN-LAST:event_addBtnMouseClicked

    private void dltBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dltBtnMouseClicked
        // TODO add your handling code here:
        try{
        int SelectedRowIndex = listedSongs.getSelectedRow();
        songLocations[SelectedRowIndex] = "";
        model.removeRow(SelectedRowIndex);
        }
        catch(Exception e)
        {
            DeleteError();
        }
    }//GEN-LAST:event_dltBtnMouseClicked

    private void crtBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_crtBtnMouseClicked
        // TODO add your handling code here:
        if(playlistName.getText().equals(""))
        {
            NameError();
        }
        else
        {
            FileCreater();
            try{
                FileWriter();
            }catch(IOException ex)
            {
                
            }
            songCounter = 0;
            playlistName.setText("");
        }
    }//GEN-LAST:event_crtBtnMouseClicked
    
    public void FileCreater(){
        try {
            myObj = new File("C:\\Users\\saleh\\Documents\\" + playlistName.getText() +".txt");
            if (myObj.createNewFile()) {
                FileCreatedMessage();
            } else {
                FileExistsError();
            }
        } catch (Exception e) {
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
    }
    public void FileWriter() throws IOException{
        FileWriter writer = new FileWriter(myObj);
        for (int i = 0; i < songCounter; i++) {
         writer.write(songLocations[i] + "\n");
        }
        writer.close();  
    }
    public void DeleteError(){  
        JFrame f = new JFrame();  
        JOptionPane.showMessageDialog(f,"No file was selected.","Alert",JOptionPane.WARNING_MESSAGE);     
    }
    
    public void NameError(){  
        JFrame f = new JFrame();  
        JOptionPane.showMessageDialog(f,"Playlist Name is not given.","Alert",JOptionPane.WARNING_MESSAGE);     
    }
    
    public void FileCreatedMessage(){  
        JFrame f=new JFrame();  
        JOptionPane.showMessageDialog(f,"Playlist created.");
        try{
            model.getDataVector().removeAllElements();
            Playlist.addplaylist.dispose();
            crtTxt.setVisible(false);
        }catch(Exception ex)
        {
            Playlist.addplaylist.dispose();
            crtTxt.setVisible(false);
        }
    }
    public void FileExistsError(){  
        JFrame f=new JFrame();  
        JOptionPane.showMessageDialog(f,"Playlist already exists.\n If any new song is slected it'll be replaced","Alert",JOptionPane.WARNING_MESSAGE);
        try{
            model.getDataVector().removeAllElements();
            Playlist.addplaylist.dispose();
            crtTxt.setVisible(false);
        }catch(Exception ex)
        {
            Playlist.addplaylist.dispose();
            crtTxt.setVisible(false);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddPlaylist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddPlaylist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddPlaylist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddPlaylist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddPlaylist().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addBtn;
    private javax.swing.JLabel addTxt;
    private javax.swing.JLabel backGroundImage;
    private javax.swing.JLabel crtBtn;
    private javax.swing.JLabel crtTxt;
    private javax.swing.JLabel dltBtn;
    private javax.swing.JLabel dltTxt;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable listedSongs;
    private javax.swing.JTextField playlistName;
    private javax.swing.JLabel txt;
    // End of variables declaration//GEN-END:variables
}
