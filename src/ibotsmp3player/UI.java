package ibotsmp3player;


import java.io.File;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.FloatControl;
import javax.sound.sampled.Line;
import javax.sound.sampled.Mixer;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

public class UI extends javax.swing.JFrame {
    
    public static IBotsMp3Player MX = new IBotsMp3Player();
    
    public static int count=0;
    
    
    public static boolean songplay = false;
    public static boolean songavailable = false;

    static boolean stpBtnClickFlag = false;
    boolean rptBtnClickFlag = false;
    
    boolean mute = false;
    int volumebfrmute = 0;
    
    static boolean playlistPause = false;
    static boolean stopPlaylist = false;
    
    static boolean nextsong = false;
    static boolean prevsong = false;

    public static Menu menu = new Menu();

    public UI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        playPauseTxt1 = new javax.swing.JLabel();
        backGround = new javax.swing.JPanel();
        backgroundImage = new javax.swing.JLabel();
        songTitle = new javax.swing.JLabel();
        menuBtn = new javax.swing.JLabel();
        menuTxt = new javax.swing.JLabel();
        repeatBtn = new javax.swing.JLabel();
        stpBtn = new javax.swing.JLabel();
        repeatTxt = new javax.swing.JLabel();
        stpTxt = new javax.swing.JLabel();
        prevBtn = new javax.swing.JLabel();
        prevTxt = new javax.swing.JLabel();
        playpauseBtn = new javax.swing.JLabel();
        volumeBtn = new javax.swing.JLabel();
        nxtBtn = new javax.swing.JLabel();
        nxtTxt = new javax.swing.JLabel();
        playPauseTxt = new javax.swing.JLabel();
        volumeRocker = new javax.swing.JSlider();
        volTxt = new javax.swing.JLabel();
        display = new javax.swing.JLabel();

        playPauseTxt1.setBackground(new java.awt.Color(153, 153, 153));
        playPauseTxt1.setForeground(new java.awt.Color(255, 255, 255));
        playPauseTxt1.setText("Pause / Resume");
        playPauseTxt1.setOpaque(true);
        playPauseTxt.setVisible(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("iBoTs Mp3 Player");
        setBackground(new java.awt.Color(0, 0, 0));
        setLocation(new java.awt.Point(500, 200));
        setResizable(false);
        setType(java.awt.Window.Type.POPUP);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backGround.setBackground(new java.awt.Color(0, 0, 0));

        backgroundImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/BG.gif"))); // NOI18N
        backgroundImage.setText("jLabel1");
        backgroundImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backgroundImageMouseClicked(evt);
            }
        });

        songTitle.setFont(new java.awt.Font("Edwardian Script ITC", 0, 24)); // NOI18N
        songTitle.setForeground(new java.awt.Color(255, 255, 255));
        songTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        songTitle.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        menuBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Playlist.png"))); // NOI18N
        menuBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuBtnMouseExited(evt);
            }
        });

        menuTxt.setBackground(new java.awt.Color(153, 153, 153));
        menuTxt.setForeground(new java.awt.Color(255, 255, 255));
        menuTxt.setText("Menu");
        menuTxt.setOpaque(true);
        menuTxt.setVisible(false);

        repeatBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Repeat.png"))); // NOI18N
        repeatBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                repeatBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                repeatBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                repeatBtnMouseExited(evt);
            }
        });

        stpBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/stop.png"))); // NOI18N
        stpBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stpBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                stpBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                stpBtnMouseExited(evt);
            }
        });

        repeatTxt.setBackground(new java.awt.Color(153, 153, 153));
        repeatTxt.setForeground(new java.awt.Color(255, 255, 255));
        repeatTxt.setText("Repeat");
        repeatTxt.setOpaque(true);
        repeatTxt.setVisible(false);

        stpTxt.setBackground(new java.awt.Color(153, 153, 153));
        stpTxt.setForeground(new java.awt.Color(255, 255, 255));
        stpTxt.setText("Stop");
        stpTxt.setOpaque(true);
        stpTxt.setVisible(false);

        prevBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Prev.png"))); // NOI18N
        prevBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prevBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                prevBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                prevBtnMouseExited(evt);
            }
        });

        prevTxt.setBackground(new java.awt.Color(153, 153, 153));
        prevTxt.setForeground(new java.awt.Color(255, 255, 255));
        prevTxt.setText("Previous");
        prevTxt.setOpaque(true);
        prevTxt.setVisible(false);

        playpauseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Play.png"))); // NOI18N
        playpauseBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playpauseBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                playpauseBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                playpauseBtnMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                playpauseBtnMouseReleased(evt);
            }
        });

        volumeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Sound.png"))); // NOI18N
        volumeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                volumeBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                volumeBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                volumeBtnMouseExited(evt);
            }
        });

        nxtBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Next.png"))); // NOI18N
        nxtBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nxtBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nxtBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nxtBtnMouseExited(evt);
            }
        });

        nxtTxt.setBackground(new java.awt.Color(153, 153, 153));
        nxtTxt.setForeground(new java.awt.Color(255, 255, 255));
        nxtTxt.setText("Next");
        nxtTxt.setOpaque(true);
        nxtTxt.setVisible(false);

        playPauseTxt.setBackground(new java.awt.Color(153, 153, 153));
        playPauseTxt.setForeground(new java.awt.Color(255, 255, 255));
        playPauseTxt.setText("Pause / Resume");
        playPauseTxt.setOpaque(true);
        playPauseTxt.setVisible(false);

        volumeRocker.setBackground(new java.awt.Color(0, 0, 0));
        volumeRocker.setOrientation(javax.swing.JSlider.VERTICAL);
        volumeRocker.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                volumeRockerStateChanged(evt);
            }
        });

        volTxt.setBackground(new java.awt.Color(153, 153, 153));
        volTxt.setForeground(new java.awt.Color(255, 255, 255));
        volTxt.setText("Mute / Unmute");
        volTxt.setOpaque(true);
        volTxt.setVisible(false);

        display.setBackground(new java.awt.Color(0, 0, 0));
        display.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        display.setForeground(new java.awt.Color(0, 153, 153));
        display.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout backGroundLayout = new javax.swing.GroupLayout(backGround);
        backGround.setLayout(backGroundLayout);
        backGroundLayout.setHorizontalGroup(
            backGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backGroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(backGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(backGroundLayout.createSequentialGroup()
                        .addGroup(backGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stpBtn)
                            .addComponent(stpTxt, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(70, 70, 70)
                        .addGroup(backGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(prevBtn)
                            .addGroup(backGroundLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(prevTxt)))
                        .addGap(37, 37, 37)
                        .addComponent(playpauseBtn))
                    .addGroup(backGroundLayout.createSequentialGroup()
                        .addComponent(repeatBtn)
                        .addGap(18, 18, 18)
                        .addComponent(repeatTxt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(playPauseTxt)
                        .addGap(16, 16, 16)))
                .addGroup(backGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backGroundLayout.createSequentialGroup()
                        .addGroup(backGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(backGroundLayout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(nxtBtn))
                            .addGroup(backGroundLayout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(nxtTxt)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(volumeRocker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))
                    .addGroup(backGroundLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(volTxt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(volumeBtn)
                        .addGap(28, 28, 28))))
            .addGroup(backGroundLayout.createSequentialGroup()
                .addGroup(backGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backGroundLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(songTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(backGroundLayout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(display, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(backGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(menuBtn)
                    .addComponent(menuTxt))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(backgroundImage, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        backGroundLayout.setVerticalGroup(
            backGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backGroundLayout.createSequentialGroup()
                .addGroup(backGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backGroundLayout.createSequentialGroup()
                        .addComponent(display, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(songTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(backGroundLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(menuBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(menuTxt)))
                .addGap(30, 30, 30)
                .addComponent(backgroundImage, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(backGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backGroundLayout.createSequentialGroup()
                        .addComponent(volumeRocker, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(volumeBtn))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backGroundLayout.createSequentialGroup()
                        .addComponent(stpBtn)
                        .addGap(18, 18, 18)
                        .addComponent(stpTxt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(repeatBtn))
                    .addGroup(backGroundLayout.createSequentialGroup()
                        .addGroup(backGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(playpauseBtn)
                            .addGroup(backGroundLayout.createSequentialGroup()
                                .addComponent(prevBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(prevTxt))
                            .addGroup(backGroundLayout.createSequentialGroup()
                                .addComponent(nxtBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nxtTxt)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(backGroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(playPauseTxt)
                            .addComponent(repeatTxt)
                            .addComponent(volTxt))
                        .addGap(0, 7, Short.MAX_VALUE)))
                .addContainerGap())
        );

        getContentPane().add(backGround, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 630));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuBtnMouseEntered
        
        menuTxt.setVisible(true);
        menuBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/PlaylistHLT.png")));
    }//GEN-LAST:event_menuBtnMouseEntered

    private void menuBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuBtnMouseExited
       
        menuTxt.setVisible(false);
        menuBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Playlist.png")));
    }//GEN-LAST:event_menuBtnMouseExited

    private void nxtBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nxtBtnMouseEntered
        
        nxtTxt.setVisible(true);
        nxtBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/NextHLT.png")));
    }//GEN-LAST:event_nxtBtnMouseEntered

    private void nxtBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nxtBtnMouseExited
        
        nxtTxt.setVisible(false);
        nxtBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Next.png")));
    }//GEN-LAST:event_nxtBtnMouseExited

    private void playpauseBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playpauseBtnMouseEntered
        
        playPauseTxt.setVisible(true);
        /*if (songplay) {
            playpauseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/PauseHLT.png")));

        } else {
            playpauseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/PlayHLT.png")));
        }*/
    }//GEN-LAST:event_playpauseBtnMouseEntered

    private void playpauseBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playpauseBtnMouseExited
        
        playPauseTxt.setVisible(false);
        /*if (songplay) {
            playpauseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Pause.png")));

        } else {
            playpauseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Play.png")));
        }*/
    }//GEN-LAST:event_playpauseBtnMouseExited

    private void prevBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prevBtnMouseEntered
        
        prevTxt.setVisible(true);
        prevBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/PrevHLT.png")));
    }//GEN-LAST:event_prevBtnMouseEntered

    private void prevBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prevBtnMouseExited
        
        prevTxt.setVisible(false);
        prevBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Prev.png")));
    }//GEN-LAST:event_prevBtnMouseExited

    private void repeatBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_repeatBtnMouseEntered
       if(!rptBtnClickFlag)
        {
            repeatTxt.setVisible(false);
            repeatBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/RepeatHLT.png")));
        }
    }//GEN-LAST:event_repeatBtnMouseEntered

    private void repeatBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_repeatBtnMouseExited
        if(!rptBtnClickFlag)
        {
            repeatTxt.setVisible(false);
            repeatBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Repeat.png")));
        }
        
    }//GEN-LAST:event_repeatBtnMouseExited

    private void stpBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stpBtnMouseEntered
        
        stpTxt.setVisible(true);
        stpBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/stopHLT.png")));
    }//GEN-LAST:event_stpBtnMouseEntered

    private void stpBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stpBtnMouseExited
        
        stpTxt.setVisible(false);
        stpBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/stop.png")));
    }//GEN-LAST:event_stpBtnMouseExited

    private void volumeBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_volumeBtnMouseEntered
        
        volTxt.setVisible(true);
        volumeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/SoundHLT.png")));
    }//GEN-LAST:event_volumeBtnMouseEntered

    private void volumeBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_volumeBtnMouseExited
        
        volTxt.setVisible(false);
        volumeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Sound.png")));
    }//GEN-LAST:event_volumeBtnMouseExited

    private void menuBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuBtnMouseClicked
        menu.setVisible(true);
    }//GEN-LAST:event_menuBtnMouseClicked

    private void playpauseBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playpauseBtnMouseClicked
        if(!songavailable)
        {
            FileFilter filter = new FileNameExtensionFilter("MP3 Files", "mp3", "mpeg3");

            JFileChooser fileChooser = new JFileChooser("F:\\IBotsMp3Player\\src\\Music");
            if(fileChooser == null)
            {
                songavailable = false;
            }
            else{
                fileChooser.addChoosableFileFilter(filter);

        
                int returnVal = fileChooser.showOpenDialog(null);

                if (returnVal == JFileChooser.APPROVE_OPTION) {
                    File selectedFile = fileChooser.getSelectedFile();
                    String song = selectedFile + "";

                    String name = fileChooser.getSelectedFile().getName();
                    display.setText("      Now Playing....");
                    songTitle.setText("" + name);
                    MX.Stop();
                    MX.playMusic(song);
                
                    playpauseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Pause.png")));
                    songplay = true;
                    songavailable = true;
            
                }
                
                
            }
            
        }
        else if(songavailable)
        {
            
            if (songplay == false) {
                playlistPause = false;
                MX.resumeMusic();
                display.setText("      Now Playing...");
                playpauseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Pause.png")));
                songplay = true;

            } else if (songplay == true) {
            
                playpauseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Play.png")));
                playlistPause = true;
                songplay = false;
                MX.pauseMusic();
                display.setText(" Paused");
            }
        }
        
    }//GEN-LAST:event_playpauseBtnMouseClicked

    private void prevBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prevBtnMouseClicked
        prevsong = true;
        //playpauseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Pause.png")));
        //songplay = true;
    }//GEN-LAST:event_prevBtnMouseClicked

    private void nxtBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nxtBtnMouseClicked
        nextsong = true;
        //playpauseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Pause.png")));
        //songplay = true;
    }//GEN-LAST:event_nxtBtnMouseClicked

    private void stpBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stpBtnMouseClicked

        if(!stpBtnClickFlag)
        {
            stpBtnClickFlag = true;
            MX.Stop();
            stopPlaylist = true;
            songplay = false;
            playpauseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Play.png")));
            display.setText("");
            songTitle.setText("");
            songavailable = false;
            Playlist.multiSong = false;
        }
    }//GEN-LAST:event_stpBtnMouseClicked

    private void repeatBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_repeatBtnMouseClicked
    
        if (!rptBtnClickFlag) {
            rptBtnClickFlag = true;
            count = 1;
            repeatBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/RepeatOn.png")));
        }
        else {
            rptBtnClickFlag = false;
            count = 0;
            repeatBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/RepeatHLT.png")));
        }
    }//GEN-LAST:event_repeatBtnMouseClicked

    private void volumeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_volumeBtnMouseClicked
        if(!mute)
        {
            volumebfrmute = volumeRocker.getValue();
            volumeRocker.setValue(0);
            mute = true;
        }
        else if(mute)
        {
            volumeRocker.setValue(volumebfrmute);
            mute = false;
        }
        
    }//GEN-LAST:event_volumeBtnMouseClicked

    private void playpauseBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playpauseBtnMouseReleased

    }//GEN-LAST:event_playpauseBtnMouseReleased

    private void volumeRockerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_volumeRockerStateChanged

        volumecontroller(); 
        mute = false;
    }//GEN-LAST:event_volumeRockerStateChanged

    private void backgroundImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backgroundImageMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_backgroundImageMouseClicked

    public void volumecontroller(){
        javax.sound.sampled.Mixer.Info[] mixers = AudioSystem.getMixerInfo();
        for(int i=0;i<mixers.length;i++){
            Mixer.Info mixerInfo = mixers[i];
            Mixer mixer = AudioSystem.getMixer(mixerInfo);
            Line.Info[] lineinfos = mixer.getTargetLineInfo();
            for(Line.Info lineinfo : lineinfos){
                try {
                    Line line = mixer.getLine(lineinfo);
                    line.open();
                    if(line.isControlSupported(FloatControl.Type.VOLUME)){
                        FloatControl control = (FloatControl) line.getControl(FloatControl.Type.VOLUME);
                        control.setValue((float) volumeRocker.getValue()/100);
                        int volumevalue = (int) (control.getValue()*100);
                    }
                } catch (Exception e) {
                
                }
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backGround;
    private javax.swing.JLabel backgroundImage;
    public static javax.swing.JLabel display;
    private javax.swing.JLabel menuBtn;
    private javax.swing.JLabel menuTxt;
    private javax.swing.JLabel nxtBtn;
    private javax.swing.JLabel nxtTxt;
    private javax.swing.JLabel playPauseTxt;
    private javax.swing.JLabel playPauseTxt1;
    public static javax.swing.JLabel playpauseBtn;
    private javax.swing.JLabel prevBtn;
    private javax.swing.JLabel prevTxt;
    private javax.swing.JLabel repeatBtn;
    private javax.swing.JLabel repeatTxt;
    public static javax.swing.JLabel songTitle;
    private javax.swing.JLabel stpBtn;
    private javax.swing.JLabel stpTxt;
    private javax.swing.JLabel volTxt;
    private javax.swing.JLabel volumeBtn;
    private javax.swing.JSlider volumeRocker;
    // End of variables declaration//GEN-END:variables

}
