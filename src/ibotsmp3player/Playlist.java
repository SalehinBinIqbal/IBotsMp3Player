/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ibotsmp3player;

import static ibotsmp3player.UI.MX;
import static ibotsmp3player.UI.display;
import static ibotsmp3player.UI.playpauseBtn;
import static ibotsmp3player.UI.songTitle;
import static ibotsmp3player.UI.songavailable;
import static ibotsmp3player.UI.songplay;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javazoom.jl.player.Player;
import org.jaudiotagger.audio.AudioFile;
import org.jaudiotagger.audio.AudioFileIO;

/**
 *
 * @author saleh
 */
public class Playlist extends javax.swing.JFrame {

    /**
     * Creates new form Playlist
     */
    String fileName;
    String path;
    String[] addedSongs = new String[1001];
    
    int i = 0,j = 0;
    int duration;
    static boolean multiSong = false;
    
    public static AddPlaylist addplaylist = new AddPlaylist();
    //Menu menu = new Menu();
    
    
    public Playlist() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        addplstBtn = new javax.swing.JButton();
        existingplstBtn = new javax.swing.JButton();
        addplstTxt = new javax.swing.JLabel();
        exstngplstTxt = new javax.swing.JLabel();
        backGroundImage = new javax.swing.JLabel();

        setTitle("Playlist");
        setLocation(new java.awt.Point(800, 200));
        setResizable(false);
        setType(java.awt.Window.Type.POPUP);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 7, 54));
        jPanel1.setOpaque(false);

        addplstBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        addplstBtn.setText("ADD");
        addplstBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addplstBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addplstBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addplstBtnMouseExited(evt);
            }
        });
        addplstBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addplstBtnActionPerformed(evt);
            }
        });

        existingplstBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        existingplstBtn.setText("Existing");
        existingplstBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                existingplstBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                existingplstBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                existingplstBtnMouseExited(evt);
            }
        });

        addplstTxt.setBackground(new java.awt.Color(153, 153, 153));
        addplstTxt.setForeground(new java.awt.Color(255, 255, 255));
        addplstTxt.setText("Create a new Playlist");
        addplstTxt.setOpaque(true);
        addplstTxt.setVisible(false);

        exstngplstTxt.setBackground(new java.awt.Color(153, 153, 153));
        exstngplstTxt.setForeground(new java.awt.Color(255, 255, 255));
        exstngplstTxt.setText("Choose Existing Playlist");
        exstngplstTxt.setOpaque(true);
        exstngplstTxt.setVisible(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(existingplstBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exstngplstTxt))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(addplstBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addplstTxt)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addplstBtn)
                    .addComponent(addplstTxt))
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingplstBtn)
                    .addComponent(exstngplstTxt))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 260, 230));

        backGroundImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/MenuBG.png"))); // NOI18N
        getContentPane().add(backGroundImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 260, 230));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addplstBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addplstBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addplstBtnActionPerformed

    private void addplstBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addplstBtnMouseEntered
        // TODO add your handling code here:
        addplstTxt.setVisible(true);
    }//GEN-LAST:event_addplstBtnMouseEntered

    private void addplstBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addplstBtnMouseExited
        // TODO add your handling code here:
        addplstTxt.setVisible(false);
    }//GEN-LAST:event_addplstBtnMouseExited

    private void existingplstBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_existingplstBtnMouseEntered
        // TODO add your handling code here:
        exstngplstTxt.setVisible(true);
    }//GEN-LAST:event_existingplstBtnMouseEntered

    private void existingplstBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_existingplstBtnMouseExited
        // TODO add your handling code here:
        exstngplstTxt.setVisible(false);
    }//GEN-LAST:event_existingplstBtnMouseExited

    private void addplstBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addplstBtnMouseClicked
        // TODO add your handling code here:
        addplaylist.setVisible(true);
        addplstTxt.setVisible(false);
        UI.menu.dispose();
        this.dispose();
    }//GEN-LAST:event_addplstBtnMouseClicked

    private void existingplstBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_existingplstBtnMouseClicked
        // TODO add your handling code here:
        if(!multiSong)
        {
            FileFilter filter = new FileNameExtensionFilter("txt Files", "txt");

            JFileChooser fileChooser = new JFileChooser("F:\\IBotsMp3Player\\src\\Music");
            fileChooser.addChoosableFileFilter(filter);

            int returnVal = fileChooser.showOpenDialog(null);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File selectedFile = fileChooser.getSelectedFile();
                path = selectedFile + "";
                multiSong = true;
                UI.stpBtnClickFlag = false;
                try{
                    MX.Stop();
                    fileReader(path);
                }catch(Exception ex){
                
                }
            }
            UI.menu.dispose();
            this.dispose();
        }
    }//GEN-LAST:event_existingplstBtnMouseClicked

    public void fileReader(String filename) throws Exception{
        BufferedReader reader = new BufferedReader(new FileReader(filename));
        String line = reader.readLine();
        //int i = 0;
        while (line != null){
            //System.out.println(line);
            addedSongs[i] = line;
            line = reader.readLine();
            i++;
        }
        reader.close();
        Thread th = new Thread(){
            public void run(){
                try{
                    for(j =0;j < i ;j++)
                    {
                        if(Menu.singleSong || UI.stopPlaylist)
                        {
                            System.out.println(UI.stopPlaylist);
                            UI.stopPlaylist = false;
                            sleep(0);
                            System.out.println(UI.stopPlaylist);
                            stop();
                            MX.Stop();
                        }
                        multiSong = true;
                        String s = addedSongs[j];
                        playMe(s);
                        display.setText("      Now Playing....");
                        songTitle.setText("" + s.replace("C:\\Users\\saleh\\Music\\", ""));
                        MX.playMusic(s);
                        playpauseBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Pause.png")));
                        songplay = true;
                        songavailable = true;
                        /*if(UI.nextsong)
                        {
                            j++;
                            stop();
                            MX.Stop();
                            s = addedSongs[j];
                            playMe(s);
                            display.setText("      Now Playing....");
                            songTitle.setText("" + s.replace("C:\\Users\\saleh\\Music\\", ""));
                            MX.playMusic(s);
                            songplay = true;
                            songavailable = true;
                            sleep((duration*1000)+100);
                            multiSong = false;
                            UI.nextsong = false;
                        }
                        if (UI.prevsong) {
                            if (j > 0) {
                                j--;
                                stop();
                                MX.Stop();
                                s = addedSongs[j];
                                playMe(s);
                                display.setText("      Now Playing....");
                                songTitle.setText("" + s.replace("C:\\Users\\saleh\\Music\\", ""));
                                MX.playMusic(s);
                                songplay = true;
                                songavailable = true;
                                sleep((duration * 1000) + 100);
                                multiSong = false;
                                UI.prevsong = false;
                            } else {
                                UI.prevsong = false;
                            }
                        }*/
                        sleep((duration * 1000) + 300);
                        multiSong = false;
                        /*if(UI.nextsong)
                        {
                            j++;
                            MX.Stop();
                            s = addedSongs[j];
                            playMe(s);
                            display.setText("      Now Playing....");
                            songTitle.setText("" + s.replace("C:\\Users\\saleh\\Music\\", ""));
                            MX.playMusic(s);
                            songplay = true;
                            songavailable = true;
                            sleep((duration*1000)+100);
                            multiSong = false;
                            UI.nextsong = false;
                        }
                        if (UI.prevsong) {
                            if (j > 0) {
                                j--;
                                MX.Stop();
                                s = addedSongs[j];
                                playMe(s);
                                display.setText("      Now Playing....");
                                songTitle.setText("" + s.replace("C:\\Users\\saleh\\Music\\", ""));
                                MX.playMusic(s);
                                songplay = true;
                                songavailable = true;
                                sleep((duration * 1000) + 100);
                                multiSong = false;
                                UI.prevsong = false;
                            } else {
                                UI.prevsong = false;
                            }
                        }*/
                        
                        //System.out.println(j);
                        if(UI.playlistPause)
                        {
                            //sleep(1000);
                            suspend();
                            //MX.pauseMusic();
                        }
                        else if(!UI.playlistPause)
                        {
                            //System.out.println(j);
                            
                            resume();
                            //MX.resumeMusic();
                        }
                    }
                    i = 0;
                }catch(Exception ex)
                {
                    
                }
            }
        };
        th.start();
    }
    
    private void playMe(String str) {
        try {

            File file = new File(str);
            FileInputStream fis = new FileInputStream(file);

            BufferedInputStream bis = new BufferedInputStream(fis);
            Player player = new Player(bis);

            duration = 0;

            AudioFile audioFile = AudioFileIO.read(file);
            duration = audioFile.getAudioHeader().getTrackLength();
        } catch (Exception e) {

        }

    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Playlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Playlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Playlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Playlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Playlist().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addplstBtn;
    private javax.swing.JLabel addplstTxt;
    private javax.swing.JLabel backGroundImage;
    private javax.swing.JButton existingplstBtn;
    private javax.swing.JLabel exstngplstTxt;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
